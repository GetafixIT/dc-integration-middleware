export type ConstructorIO = {
    browse:     Browse
    catalog:    Catalog
    search:     Search
}

export type Browse = {
    getBrowseResults: (filterName, filterValue, parameters?, userParameters?, networkParameters?) => Promise<any>
}

export type Catalog = {
    getItem: ({ id, section }, networkParameters?) => Promise<any>
    getItemGroups: (networkParameters?) => Promise<any>
}

export type Search = {
    getSearchResults: (query, parameters?, userParameters?, networkParameters?) => Promise<any>
}

// Generated by https://quicktype.io

export interface ConstructorIOCategory {
    name:     string;
    id:       string;
    data:     null;
    children: ConstructorIOCategory[];
}

// Generated by https://quicktype.io

export interface ConstructorIOProduct {
    name:            string;
    suggested_score: number;
    id:              string;
    metadata:        ConstructorIOProductMetadata;
    url:             string;
    group_ids:       string[];
    image_url:       string;
    variations:      Variation[];
}

export interface ConstructorIOProductMetadata {
}

export interface Variation {
    name:            string;
    suggested_score: number;
    id:              string;
    metadata:        VariationMetadata;
    url:             string;
}

export interface VariationMetadata {
    sku:                          string;
    "image-0":                    string;
    listPrice:                    string;
    salePrice:                    string;
    "attribute-size":             string;
    "attribute-color":            string;
    "attribute-articleNumberMax": string;
}

// Generated by https://quicktype.io

export interface ConstructorIOSearchResult {
    matched_terms: string[];
    data:          ConstructorIOSearchResultData;
    value:         string;
    is_slotted:    boolean;
    labels:        Labels;
    variations:    Variation[];
    result_id:     string;
}

export interface ConstructorIOSearchResultData {
    id:           string;
    url:          string;
    image_url:    string;
    group_ids:    string[];
    variation_id: string;
}

export interface Labels {
}

export interface Variation {
    data:  VariationData;
    value: string;
}

export interface VariationData {
    url:          string;
    variation_id: string;
}
